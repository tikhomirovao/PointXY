#include <iostream>
#include <stdlib.h>

using namespace std;

class Point                                                 //класс описывающий точку
{
    int X, Y;
public:
    //Конструктор с параметрами, со значением параметров по умолчанию
    Point(int x = 0, int y = 0) : X{ x }, Y{ y } {}         

   
    void Show()const //метод вывода на экран
    {
        cout << "(" << X << ";" << Y << ")" << endl;
    }

    
    Point& operator--()                                     //перегрузка префиксной формы оператора декремент -- для ситуации --А
    {
        //уменьшает  содержимое всех полей текущего объекта на 10
        X -= 10;
        Y -= 10;
        return *this;                                       //вовзращаем ссылку на текущий объект, разыменовав указатель this
    }
    
    Point operator--(int)                                   //перегрузка постфиксной формы оператора декремент -- для ситуации А--
    {
        Point Temp(X, Y);                                   //создаем копию текущего объекта со старыми значениями полей
        //уменьшает  содержимое всех полей текущего объекта на 2
        X -= 2;
        Y -= 2;
        return Temp;                                        //возвращаем предыдущее состояние текущего объекта
    }
};

int main()
{
    system("chcp 1251");
    system("cls");

    Point A(5, 20);
    A.Show();
    Point B(10);
    B.Show();
    Point C;
    C.Show();

    cout << "Точка А: ";
    A.Show();
    --A;                                                    //префиксная форма оператора декремент
    cout << "Точка А: ";
    A.Show();
    A--;                                                    //постфиксная форма оператора декремент
    cout << "Точка А: ";
    A.Show();

    cout << "Точка B: ";
    B.Show();
    --B;
    cout << "Точка B: ";
    B.Show();
    B--;
    cout << "Точка B: ";
    B.Show();

    cout << "Точка C: ";
    C.Show();
    --C;
    cout << "Точка C: ";
    C.Show();
    C--;
    cout << "Точка C: ";
    C.Show();

}